% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compileMarkdown.R
\name{compileMarkdown}
\alias{compileMarkdown}
\title{compileMarkdown}
\usage{
compileMarkdown(
  classVariable,
  savingName,
  originalDiagnosis,
  idColumn,
  numTrees,
  mtrysvm,
  splitRule,
  sampleFraction,
  maxDepth,
  minNodeSize,
  diagnosticChangeProbability,
  nCores,
  seed,
  clinicDataSVM,
  originalClinicData,
  categoricActivePredictors,
  numericActivePredictors,
  lambdas,
  C,
  gamma,
  kernel,
  partitionPercentage,
  enrichment,
  absolutePath,
  omicData,
  omic,
  domainTable
)
}
\arguments{
\item{classVariable}{String | Target variable, which must be binary, meaning it has two possible values. If the user does not specify a path to his own data, the value for the sample data, Ca.Co.Last, will be used.}

\item{savingName}{String | Name under which the model and solution will be saved after execution. If the user does not set any name, it will create a string with the current date.}

\item{originalDiagnosis}{Array of Strings | Original diagnostics of the patients.}

\item{idColumn}{String | Variable that indicates the identifier of each patient in both datasets. If the user does not specify a path to his own data, the value for the sample data, Trial, will be used.}

\item{numTrees}{Integer | Number of trees of the Random Forest model. Default value: 100.}

\item{splitRule}{String | This is the rule used by the algorithm to select the predictor and the optimal value to separate a node into two branches during the tree construction. Default value: gini.}

\item{sampleFraction}{Decimal | Fraction of the training data that will be used to create each of the trees in the forest. Default value: 1.}

\item{maxDepth}{Integer | Maximum height of each tree in the forest. Default value: 4.}

\item{minNodeSize}{Integer | Minimum number of observations required in a node to be able to split it. Default value: 30.}

\item{diagnosticChangeProbability}{Decimal | Percentage (expressed as a fraction) indicating the probability of each gene in the solutions to be changed. Default value: 0.1 (10%).}

\item{nCores}{Integer | Number of cores to be used in parallelization. Default value: 6.}

\item{seed}{Integer | Seed used for the creation of training and test sets. Default value: 1234.}

\item{geneticAlgorithm}{GA | Genetic algorithm object.}

\item{numModelExecutions}{Integer | Number of times the Lasso algorithm is executed. Default value: 5.}

\item{clinicData}{Dataset | Dataset of clinic data that will be used.}

\item{omicPredictorsToIgnore}{Array of Strings | Variables to be removed from the omic dataset. These will not be taken into account in the execution.}

\item{clinicPredictorsToIgnore}{Array of Strings | Variables to be removed from the clinic dataset. These will not be taken into account in the execution.}

\item{selectedData}{Dataset | Dataset of omic data with only the predictors selected by the Lasso model.}

\item{mtry}{Integer | Number of predictors that are evaluated at each partition (node) of each tree. Default value: 225.}

\item{nIterations}{Integer | Number of iterations (generations) the genetic algorithm will perform. Default value: 200.}

\item{bestBaselineModelCM}{Confusion Matrix | Confusion matrix of the best model obtained before the detection.}

\item{pcaAlpha}{Decimal | Alpha used for the points that don't change in the pca plot. Default value: 0.2.}

\item{pcaSize}{Decimal | Size used for the points that change in the pca plot. Default value: 1.3.}
}
\description{
This function compiles the markdown file with the analysis results
}
\examples{

MLASDO::compileMarkdown(savingName = savingName, geneticAlgorithm = geneticAlgorithm, numModelExecutions = numModelExecutions, originalDiagnosis = originalDiagnosis, clinicData = clinicData, categoricActivePredictors = categoricActivePredictors, numericActivePredictors = numericActivePredictors, selectedData = selectedData, classVariable = classVariable, idColumn = idColumn, numTrees = numTrees, mtry = mtry, splitRule = splitRule, sampleFraction = sampleFraction, maxDepth = maxDepth, minNodeSize = minNodeSize, diagnosticChangeProbability = diagnosticChangeProbability, nCores = nCores, seed = seed, bestBaselineModelCM = bestBaselineModelCM, pcaAlpha = pcaAlpha, pcaSize = pcaSize)

}
