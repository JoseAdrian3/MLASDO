% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compileMarkdown.R
\name{compileMarkdown}
\alias{compileMarkdown}
\title{compileMarkdown}
\usage{
compileMarkdown(
  savingName,
  justAnalysis,
  geneticAlgorithm,
  mlAlgorithm,
  numModelExecutions,
  lassoPredictorsPath,
  baselinePrecision,
  baselinePredictors,
  originalDiagnosis,
  clinicData,
  categoricActivePredictors,
  numericActivePredictors,
  selectedData,
  classVariable,
  idColumn,
  predictorsToSelect,
  numTrees,
  mtry,
  splitRule,
  sampleFraction,
  maxDepth,
  minNodeSize,
  bestLambda,
  nIterations,
  nStopIter,
  populationSize,
  diagnosticChangeProbability,
  crossoverOperator,
  crossoverProbability,
  selectionOperator,
  mutationOperator,
  mutationProbability,
  nCores,
  seed,
  bestAfterDetectionCM,
  bestBaselineModelCM,
  pcaAlpha,
  pcaSize
)
}
\arguments{
\item{savingName}{String | Name under which the model and solution will be saved after execution. If the user does not set any name, it will create a string with the current date.}

\item{justAnalysis}{Bool | Indicates whether to perform the analysis directly (TRUE) or to run the genetic algorithm (FALSE). Default value: FALSE.}

\item{geneticAlgorithm}{GA | Genetic algorithm object.}

\item{mlAlgorithm}{String | Machine Learning algorithm to be applied, the options are: Lasso or RF (Random Forest).}

\item{numModelExecutions}{Integer | Number of times the Lasso algorithm is executed. Default value: 5.}

\item{lassoPredictorsPath}{String | Path to the mean number of predictors selected by Lasso in each generation.}

\item{baselinePrecision}{Decimal | Baseline precision obtained with the model before the detection.}

\item{baselinePredictors}{Integer | Baseline predictors selected with the model before the detection.}

\item{originalDiagnosis}{Array of Strings | Original diagnostics of the patients.}

\item{clinicData}{Dataset | Dataset of clinic data that will be used.}

\item{selectedData}{Dataset | Dataset of omic data with only the predictors selected by the Lasso model.}

\item{classVariable}{String | Target variable, which must be binary, meaning it has two possible values. If the user does not specify a path to his own data, the value for the sample data, Ca.Co.Last, will be used.}

\item{idColumn}{String | Variable that indicates the identifier of each patient in both datasets. If the user does not specify a path to his own data, the value for the sample data, Trial, will be used.}

\item{predictorsToSelect}{Integer | Number of predictors to be selected from the most important predictors ranked by the RF model. This parameter is a integer number between 1 and the total number of predictors in the data. Default value: 15.}

\item{numTrees}{Integer | Number of trees of the Random Forest model. Default value: 100.}

\item{mtry}{Integer | Number of predictors that are evaluated at each partition (node) of each tree. Default value: 225.}

\item{splitRule}{String | This is the rule used by the algorithm to select the predictor and the optimal value to separate a node into two branches during the tree construction. Default value: gini.}

\item{sampleFraction}{Decimal | Fraction of the training data that will be used to create each of the trees in the forest. Default value: 1.}

\item{maxDepth}{Integer | Maximum height of each tree in the forest. Default value: 4.}

\item{minNodeSize}{Integer | Minimum number of observations required in a node to be able to split it. Default value: 30.}

\item{bestLambda}{Bool | It indicates when to perform cv to find the best lambda for the Lasso model (TRUE) and when not (FALSE). If the value is FALSE, the best lambda found for the Baseline Lasso model will be used for all the Lasso models.}

\item{nIterations}{Integer | Number of iterations (generations) the genetic algorithm will perform. Default value: 200.}

\item{nStopIter}{Integer | Number of iterations after which the algorithm will stop if all of them have the same fitness value. Default value: 25.}

\item{populationSize}{Integer | Number of solutions that will be part of the initial population. Default value: 150.}

\item{diagnosticChangeProbability}{Decimal | Percentage (expressed as a fraction) indicating the probability of each gene in the solutions to be changed. Default value: 0.1 (10%).}

\item{crossoverOperator}{String | Crossover operator used in the genetic algorithm. Default value: Single Point Crossover.}

\item{crossoverProbability}{Decimal | Percentage (expressed as a fraction) indicating the probability of crossover occurrence. Default value: 0.8 (80%).}

\item{selectionOperator}{String | Selection operator used in the genetic algorithm. Default value: Tournament Selection.}

\item{mutationOperator}{String | Mutation operator used in the genetic algorithm. Default value: Random Mutation.}

\item{mutationProbability}{Decimal | Percentage (expressed as a fraction) indicating the probability of mutation occurrence. Default value: 0.1 (10%).}

\item{nCores}{Integer | Number of cores to be used in parallelization. Default value: 6.}

\item{seed}{Integer | Seed used for the creation of training and test sets. Default value: 1234.}

\item{bestAfterDetectionCM}{Confusion Matrix | Confusion matrix of the best model obtained after the detection.}

\item{bestBaselineModelCM}{Confusion Matrix | Confusion matrix of the best model obtained before the detection.}

\item{pcaAlpha}{Decimal | Alpha used for the points that don't change in the pca plot. Default value: 0.2.}

\item{pcaSize}{Decimal | Size used for the points that change in the pca plot. Default value: 1.3.}

\item{omicPredictorsToIgnore}{Array of Strings | Variables to be removed from the omic dataset. These will not be taken into account in the execution.}

\item{clinicPredictorsToIgnore}{Array of Strings | Variables to be removed from the clinic dataset. These will not be taken into account in the execution.}
}
\description{
This function compiles the markdown file with the analysis results
}
\examples{

MLASDO::compileMarkdown(savingName = savingName, justAnalysis = justAnalysis, geneticAlgorithm = geneticAlgorithm, mlAlgorithm = mlAlgorithm, numModelExecutions = numModelExecutions, lassoPredictorsPath = lassoPredictorsPath, baselinePrecision = baselinePrecision, baselinePredictors = baselinePredictors, originalDiagnosis = originalDiagnosis, clinicData = clinicData, categoricActivePredictors = categoricActivePredictors, numericActivePredictors = numericActivePredictors, selectedData = selectedData, classVariable = classVariable, idColumn = idColumn, predictorsToSelect = predictorsToSelect, numTrees = numTrees, mtry = mtry, splitRule = splitRule, sampleFraction = sampleFraction, maxDepth = maxDepth, minNodeSize = minNodeSize, bestLambda = bestLambda, nIterations = nIterations, nStopiter = nStopiter, populationSize = populationSize, diagnosticChangeProbability = diagnosticChangeProbability, crossoverOperator = crossoverOperator, crossoverProbability = crossoverProbability, selectionOperator = selectionOperator, mutationOperator = mutationOperator, mutationProbability = mutationProbability, nCores = nCores, seed = seed, bestAfterDetectionCM = bestAfterDetectionCM, bestBaselineModelCM = bestBaselineModelCM, pcaAlpha = pcaAlpha, pcaSize = pcaSize)

}
